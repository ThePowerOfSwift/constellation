<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="protocol_a_r_tool_kit_plus_wrapper_delegate-p" kind="protocol" prot="public">
    <compoundname>ARToolKitPlusWrapperDelegate-p</compoundname>
    <derivedcompoundref refid="interface_v_r_view_controller" prot="public" virt="non-virtual">VRViewController</derivedcompoundref>
    <includes refid="_a_r_tool_kit_plus_wrapper_8h" local="no">ARToolKitPlusWrapper.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="protocol_a_r_tool_kit_plus_wrapper_delegate-p_1a60ce3d7828d23a81aa3e1ee2432288e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ARToolKitPlusWrapperDelegate-p::aRToolKitPlusWrapper:didSetupWithProjectionMatrix:</definition>
        <argsstring>(ARToolKitPlusWrapper *wrapper,[didSetupWithProjectionMatrix] float *projectionMatrix)</argsstring>
        <name>aRToolKitPlusWrapper:didSetupWithProjectionMatrix:</name>
        <param>
          <type><ref refid="interface_a_r_tool_kit_plus_wrapper" kindref="compound">ARToolKitPlusWrapper</ref> *</type>
          <declname>wrapper</declname>
        </param>
        <param>
          <attributes>[didSetupWithProjectionMatrix]</attributes>
          <type>float *</type>
          <declname>projectionMatrix</declname>
        </param>
        <briefdescription>
<para>When the wrapper can auto setup with a frame sample, the only constraint for now is that the images has to be in BGRA. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wrapper</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="interface_a_r_tool_kit_plus_wrapper" kindref="compound">ARToolKitPlusWrapper</ref> instance calling its delegate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>projectionMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>The OpenGL projection matrix generated by ARToolKitPLus </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Benjamin/Travail/GFI/VRToolKit/XcodeProject/Classes/ARToolKitPlusWrapper.h" line="41"/>
      </memberdef>
      <memberdef kind="function" id="protocol_a_r_tool_kit_plus_wrapper_delegate-p_1a7bf7738f92f51164b6feee5b5f244010" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ARToolKitPlusWrapperDelegate-p::aRToolKitPlusWrapper:didDetectMarker:withConfidence:andComputeModelViewMatrix:</definition>
        <argsstring>(ARToolKitPlusWrapper *wrapper,[didDetectMarker] int markerID,[withConfidence] float confidence,[andComputeModelViewMatrix] float *modelViewMatrix)</argsstring>
        <name>aRToolKitPlusWrapper:didDetectMarker:withConfidence:andComputeModelViewMatrix:</name>
        <param>
          <type><ref refid="interface_a_r_tool_kit_plus_wrapper" kindref="compound">ARToolKitPlusWrapper</ref> *</type>
          <declname>wrapper</declname>
        </param>
        <param>
          <attributes>[didDetectMarker]</attributes>
          <type>int</type>
          <declname>markerID</declname>
        </param>
        <param>
          <attributes>[withConfidence]</attributes>
          <type>float</type>
          <declname>confidence</declname>
        </param>
        <param>
          <attributes>[andComputeModelViewMatrix]</attributes>
          <type>float *</type>
          <declname>modelViewMatrix</declname>
        </param>
        <briefdescription>
<para>When the wrapper has processed a frame to detect a marker this method is called on its delegate. </para>        </briefdescription>
        <detaileddescription>
<para>This method send informations neeed to display an object in virtual reality. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wrapper</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="interface_a_r_tool_kit_plus_wrapper" kindref="compound">ARToolKitPlusWrapper</ref> instance calling its delegate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>markerID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the marker detected (-1 if no marker detected) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>confidence</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modelViewMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>The OpenGL model view matrix generated by ARToolKitPLus according to the orientation of the marker </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Benjamin/Travail/GFI/VRToolKit/XcodeProject/Classes/ARToolKitPlusWrapper.h" line="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This protocol describes the delegates methods that the delegate of an <ref refid="interface_a_r_tool_kit_plus_wrapper" kindref="compound">ARToolKitPlusWrapper</ref> instance must implement. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Benjamin Loulier</para></simplesect>
An <ref refid="interface_a_r_tool_kit_plus_wrapper" kindref="compound">ARToolKitPlusWrapper</ref> instance use the delegate pattern to send back datas when it is initialized and when a marker is or is not detected. This protocol describes the methods that the <ref refid="interface_a_r_tool_kit_plus_wrapper" kindref="compound">ARToolKitPlusWrapper</ref> instance calls on its delegate.<linebreak/>
 For now only single marker detection is implemented. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>VRViewController</label>
        <link refid="interface_v_r_view_controller"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>&lt;ARToolKitPlusWrapperDelegate&gt;</label>
        <link refid="protocol_a_r_tool_kit_plus_wrapper_delegate-p"/>
      </node>
    </inheritancegraph>
    <location file="/Users/Benjamin/Travail/GFI/VRToolKit/XcodeProject/Classes/ARToolKitPlusWrapper.h" line="33" bodyfile="/Users/Benjamin/Travail/GFI/VRToolKit/XcodeProject/Classes/ARToolKitPlusWrapper.h" bodystart="33" bodyend="-1"/>
    <listofallmembers>
      <member refid="protocol_a_r_tool_kit_plus_wrapper_delegate-p_1a7bf7738f92f51164b6feee5b5f244010" prot="public" virt="virtual"><scope>ARToolKitPlusWrapperDelegate-p</scope><name>aRToolKitPlusWrapper:didDetectMarker:withConfidence:andComputeModelViewMatrix:</name></member>
      <member refid="protocol_a_r_tool_kit_plus_wrapper_delegate-p_1a60ce3d7828d23a81aa3e1ee2432288e5" prot="public" virt="virtual"><scope>ARToolKitPlusWrapperDelegate-p</scope><name>aRToolKitPlusWrapper:didSetupWithProjectionMatrix:</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
